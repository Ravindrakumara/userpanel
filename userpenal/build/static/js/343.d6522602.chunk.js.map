{"version":3,"file":"static/js/343.d6522602.chunk.js","mappings":"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","sources":["student/coed/views/survey/index.jsx"],"sourcesContent":["/* eslint-disable */\nimport React, { useEffect, useState} from \"react\";\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CForm,\n    CFormCheck,\n    CFormInput,\n    CFormLabel,\n    CFormTextarea,\n    CRow,CToast,CToastHeader,CToastBody\n  } from '@coreui/react'\n  import apiService from 'src/service/apiService'\n// import { useRef } from \"react\";\nfunction formS() {\n  const [uniqId,setUniqId]  = useState(0)\n  const [question,setQuestion]  = useState([])\n  const [questionData,setQuestionData]  = useState([])\n  const [geoset,setGeoset] = useState(false)\n  const [username,setUsername] = useState('')\n  const [q1,setQ1] = useState(\"\")\n  const [q2,setQ2] = useState(\"\")\n  const [q3,setQ3] = useState(\"\")\n  const [q4,setQ4] = useState(\"\")\n  const [q5,setQ5] = useState(\"\")\n  const [q6,setQ6] = useState(\"\")\n\n  const [form,setForm]  = useState({fullname:'',\n                                    phone:'',\n                                    email:'',\n                                    address:'',\n                                    q1:'',\n                                    q2:'',\n                                    q3:'',\n                                    q4:'',\n                                    q5:'',\n                                    accuracy:null,\n                                    altitude:null,\n                                    altitudeAccuracy:null,\n                                    heading:null,\n                                    latitude:null,\n                                    longitude:null,\n                                    acceptsms:null,\n                                    acceptemail:null})\n\n  const [validation,setValidation] = useState({ error_fullname:'',\n                                                error_phone:'',\n                                                error_email:'',\n                                                error_address:'',\n                                                error_q1:'',\n                                                error_q2:'',\n                                                error_q3:'',\n                                                error_q4:'',\n                                                error_q5:'',\n                                                error_acceptsms:'',\n                                                error_acceptemail:''})\n  useEffect(()=>{\n    serveyQuestionList()\n    spiltway()\n    finduser()\n  },[])\n\n\n  const finduser = async() =>{\n    const respon = await apiService.getProfileInfo()\n    setUsername(respon.data.username)\n  }\n  const spiltway = async() =>{\n    const queryString = window.location\n    const urlval = queryString.pathname\n    let str = urlval.slice(22,35) \n    let id = str.replace(\"/\",\"\")\n    let repl = id.replace(\"/\",\"\")\n    let a = parseInt(repl)\n    \n    if( isNaN(a) === false){\n       const data = await apiService.alterformSurvey(a)\n       let i = data.data\n       setQuestionData(questionData.push(i))\n       alter()\n       setUniqId(a)\n    }else{\n\n    }\n  } \n\n  // async alterformSurvey\n  const serveyQuestionList = async()=>{\n    const queData = await apiService.getAllforquestions()\n    const x = queData.data\n    const q1 = x.filter((item) => item.place == 1);\n    const q2 = x.filter((item) => item.place == 2);\n    const q3 = x.filter((item) => item.place == 3);\n    const q4 = x.filter((item) => item.place == 4);\n    const q5 = x.filter((item) => item.place == 5);\n    const q6 = x.filter((item) => item.place == 6);\n    setQ1(q1[0].question)\n    setQ2(q2[0].question)\n    setQ3(q3[0].question)\n    setQ4(q4[0].question)\n    setQ5(q5[0].question)\n    setQ6(q6[0].question)\n  }\n//\n \n  const alter = ()=>{\n    form.fullname = questionData[0].fullname\n    form.phone = questionData[0].phone\n    form.email= questionData[0].email\n    form.address= questionData[0].address\n    form.q1= questionData[0].q1\n    form.q2= questionData[0].q2\n    form.q3= questionData[0].q3\n    form.q4= questionData[0].q4\n    form.q5= questionData[0].q5\n    form.accuracy= questionData[0].accuracy\n    form.altitude= questionData[0].altitude\n    form.altitudeAccuracy= questionData[0].altitudeAccuracy\n    form.heading= questionData[0].heading\n    form.latitude= questionData[0].latitude\n    form.longitude= questionData[0].longitude\n    form.acceptsms= questionData[0].acceptsms\n    form.acceptemail= questionData[0].acceptemail\n    form.modifyDate = questionData[0].modifyDate\n    form.createDate= questionData[0].createDate\n    form.softdeleteDate= questionData[0].softdeleteDate\n    form.createUser= questionData[0].createUser\n    form.modifyUser= username\n    form.softdeleteUser= questionData[0].softdeleteUser\n    form.isdelete= questionData[0].isdelete\n  }\n  const instance = () =>{\n    let i =0;\n    if(i < uniqId){\n      alterForm()\n    }else{\n      createForm()\n    }\n    \n  }\n  const alterForm = async()=>{\n    let id = uniqId\n    const x = await apiService.alterSurvey(form,id)\n    if(x.status === 200){\n      alert(\"updated successfully\")\n      window.location.href = `/coed/app/servey/`;\n    }else{\n      alert(\"Error\")\n    }\n  }\n\n \n  const createForm = async()=>{\n  // let errors = validation; app/servey\n  // if(form.fullname ==''){\n  //   errors.error_fullname = 'Fullname is required'\n  // }\n  // if(form.phone ==''){\n  //   errors.error_phone = 'Mobile/Phone No is required'\n  // }\n  // if(form.email ==''){\n  //   errors.error_email = 'E-mail is required'\n  // }\n  // if(form.address ==''){\n  //   errors.error_address = 'Address is required'\n  // }\n  \n  // if(form.fullname !==''|| form.phone !==''||form.email !==''||form.address !==''){\n  //   alter('true')\n  // }\n  // return setValidation(errors);\n\n  if(navigator.geolocation) {\n    navigator.geolocation.watchPosition(function(a) { \n    form.accuracy = (a.coords.accuracy ?? \"\");\n    form.altitude = (a.coords.altitude ?? \"\");\n    form.altitudeAccuracy = (a.coords.altitudeAccuracy ?? \"\");\n    form.heading = (a.coords.heading ?? \"\");\n    form.latitude = (a.coords.latitude ?? \"\");\n    form.longitude = (a.coords.longitude?? \"\");\n  })\n  } else {\n    alert(\"Hello! I am an alert box!!\");\n  }\n  positionv()\n}\n  // ============\n  const positionv = async(a)=>{ \n    form.createUser = username\n    form.acceptsms = (form.acceptsms ?? false)\n    form.acceptemail = (form.acceptemail ?? false)\n    form.fullname = (form.fullname ?? \"\")\n    form.phone = (form.phone ?? \"\")\n    const x = await apiService.newinstanceSurvey(form)\n    if(x.status === 201){\n      alert(\"Added successfully\")\n    }else{\n      alert(\"Not Added successfully\")\n    }\n  }\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>One minute for Successful life</strong>\n          </CCardHeader>\n          <CCardBody>\n              <CForm>\n                <CRow>\n                    <CCol>\n                    <CFormLabel htmlFor=\"exampleFormControlInput1\">Full name</CFormLabel>\n                    <CFormInput  className=\"text-primary\"\n                        type=\"text\"\n                        value={form.fullname}\n                        onChange={(e)=>setForm((x)=>({...x,fullname:e.target.value}))}\n                        size=\"sm\"\n                    />\n                    {validation.error_fullname && <p><small className=\"text-danger\">{validation.error_fullname}</small></p>}\n                    </CCol>\n                </CRow>\n\n                <CRow>\n                    <CCol>\n                    <CFormLabel htmlFor=\"exampleFormControlInput1\">Mobile/Phone</CFormLabel>\n                    <CFormInput className=\"text-primary\"\n                        type=\"text\"\n                        value={form.phone}\n                        onChange={(e)=>setForm((x)=>({...x,phone:e.target.value}))}\n                        size=\"sm\"\n                    />\n                    {validation.error_phone && <p><small className=\"text-danger\">{validation.error_phone}</small></p>}\n                    </CCol>\n                </CRow>\n                <CRow>\n                    <CCol>\n                    <CFormLabel htmlFor=\"exampleFormControlInput1\">Email address</CFormLabel>\n                    <CFormInput className=\"text-primary\"\n                        type=\"email\"\n                        id=\"exampleFormControlInput1\"\n                        value={form.email}\n                        onChange={(e)=>setForm((x)=>({...x,email:e.target.value}))}\n                        // onChange={(e)=>{setForm(e.target.value)}}\n                        size=\"sm\"\n                    />\n                    {validation.error_email && <p><small className=\"text-danger\">{validation.error_email}</small></p>}\n                    </CCol>\n                </CRow>\n                <CRow>\n                    <CCol>\n                    <CFormLabel htmlFor=\"exampleFormControlInput1\">Address</CFormLabel>\n                    <CFormTextarea  value={form.address} className=\"text-primary\"\n                        // onChange={(e)=>{setForm(e.target.value)}} \n                        onChange={(e)=>setForm((x)=>({...x,address:e.target.value}))}\n                        id=\"exampleFormControlTextarea1\" size=\"sm\" rows=\"3\"></CFormTextarea>\n                        {validation.error_address && <p><small className=\"text-danger\">{validation.error_address}</small></p>}\n                    </CCol>\n                </CRow>\n                <CRow>\n                    <CCol>\n                    <CFormLabel htmlFor=\"exampleFormControlInput1\">{q1 ?? \"Question 1\"}</CFormLabel>\n                    <CFormInput className=\"text-primary\"\n                        type=\"text\"\n                        id=\"exampleFormControlInput1\"\n                        value={form.q1}\n                        // onChange={(e)=>{setForm(e.target.value)}}\n                        onChange={(e)=>setForm((x)=>({...x,q1:e.target.value}))}\n                        size=\"sm\"\n                    />\n                    </CCol>\n                </CRow>\n                <CRow>\n                    <CCol>\n                    <CFormLabel htmlFor=\"exampleFormControlInput1\">{q2 ?? \"Question 2\"}</CFormLabel>\n                    <CFormInput className=\"text-primary\"\n                        type=\"text\"\n                        id=\"exampleFormControlInput1\"\n                        value={form.q2}\n                        // onChange={(e)=>{setForm(e.target.value)}}\n                        onChange={(e)=>setForm((x)=>({...x,q2:e.target.value}))}\n                        size=\"sm\"\n                    />\n                    </CCol>\n                </CRow>\n\n                <CRow>\n                    <CCol>\n                    <CFormLabel htmlFor=\"exampleFormControlInput1\">{q3 ?? \"Question 3\"}</CFormLabel>\n                    <CFormInput\n                        type=\"text\" className=\"text-primary\"\n                        id=\"exampleFormControlInput1\"\n                        value={form.q3}\n                        // onChange={(e)=>{setForm(e.target.value)}}\n                        onChange={(e)=>setForm((x)=>({...x,q3:e.target.value}))}\n                        size=\"sm\"\n                    />\n                    </CCol>\n                </CRow>\n\n                <CRow>\n                    <CCol>\n                    <CFormLabel htmlFor=\"exampleFormControlInput1\">{q4 ?? \"Question 4\"}</CFormLabel>\n                    <CFormInput\n                        type=\"text\"\n                        className=\"text-primary\"\n                        id=\"exampleFormControlInput1\"\n                        value={form.q4}\n                        // onChange={(e)=>{setForm(e.target.value)}}\n                        onChange={(e)=>setForm((x)=>({...x,q4:e.target.value}))}\n                        size=\"sm\"\n                    />\n                    </CCol>\n                </CRow>\n\n                \n\n                <CRow>\n                    <CCol>\n                    \n                    <CFormCheck checked={form.acceptsms} className=\"text-primary\" \n                    onChange={(e)=>setForm((x)=>({...x,acceptsms:e.target.checked}))}\n                    // onChange={(e)=>{e.target.checked}}\n                    />\n                    <CFormLabel  htmlFor=\"exampleFormControlInput1\">{q5 ?? \"Question 5\"}</CFormLabel>\n                    </CCol>\n                </CRow>\n                <CRow>\n                    <CCol>\n                    <CFormCheck checked={form.acceptemail} className=\"text-primary\" \n                    onChange={(e)=>setForm((x)=>({...x,acceptemail:e.target.checked}))}\n                    />\n                    <CFormLabel htmlFor=\"exampleFormControlInput1\">{q6 ?? \"Question 6\"}</CFormLabel>\n                    </CCol>\n                </CRow>\n                <CRow>\n                    <CCol md={4}>\n                     \n                    </CCol>\n                    <CCol md={4}>\n                    <CButton color='danger' size='sm'>Reset</CButton>\n                    &nbsp; &nbsp;\n                    <CButton color='primary' onClick={()=>{instance()}} size='sm'>{!uniqId ? \"Save\":\"Update\"}</CButton> \n                    </CCol>\n                    <CCol md={4}>\n                    </CCol>\n                </CRow>\n              </CForm>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      \n    </CRow>\n  )\n}\n\nexport default formS"],"names":["useState","uniqId","setUniqId","questionData","setQuestionData","username","setUsername","q1","setQ1","q2","setQ2","q3","setQ3","q4","setQ4","q5","setQ5","q6","setQ6","fullname","phone","email","address","accuracy","altitude","altitudeAccuracy","heading","latitude","longitude","acceptsms","acceptemail","form","setForm","error_fullname","error_phone","error_email","error_address","error_q1","error_q2","error_q3","error_q4","error_q5","error_acceptsms","error_acceptemail","validation","useEffect","serveyQuestionList","spiltway","finduser","apiService","respon","data","a","queryString","window","location","urlval","pathname","str","slice","id","replace","repl","parseInt","isNaN","i","push","alter","queData","x","filter","item","place","question","modifyDate","createDate","softdeleteDate","createUser","modifyUser","softdeleteUser","isdelete","alterForm","status","alert","href","createForm","navigator","geolocation","watchPosition","coords","positionv","xs","className","htmlFor","type","value","onChange","e","target","size","rows","checked","md","color","onClick"],"sourceRoot":""}